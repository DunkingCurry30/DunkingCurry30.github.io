# 如果是第一次看这个文件，看不明白先不要紧，先看明白它的关系先
# yml格式编写
## stages：通俗讲：就是将项目，从打包部署，分几个步骤，比如我这里就分两个步骤，一个 build,打包编译， deploy：部署
## 如果有更多步骤就写上，比如 先 clean build test deploy ；如Java的项目： 先 mvn clean , mvn test ,mvn package
# image: node # 就是所依赖的环境 在 gitrunner-cli注册的时候，已经写了此处可以省略不写
stages:
    - build    
    - deploy
     
before_script:
  - echo "gitlab-ci start..."
  - eval `ssh-agent -s` # 设置 SSH 认证信息
  - ssh-add <(echo "$SSH_KEY")
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - ssh-keyscan 121.43.154.107 > ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts 
build_job:
  
  stage: build  # 这一个stage：的值就是上面的 stages下的第一个 build
  tags: # tag 在注册的时候，有提到过，分两步骤，第一个是 buil,所以这里也对应上，注册的时候是自定义的名称
  - build
  script: # 这个就是操作命令 或者写脚本路径
  - npm install -g cnpm --registry=https://registry.npm.taobao.org #切换至cnpm，提升速度
  - echo `pwd` # 输出当前路径
  - cnpm install -g hexo-cli  # 安装 hexo-cli
  - cnpm install 
  - hexo clean && hexo g # 打包生成 public 文件夹
 
# 缓存，因为是容器执行，每次执行的时候都会重新打包，缓存起来就不需要安装一次  
cache:
  paths:
   - node_modules/
   - public/  

# 第二个任务 就是专业词语 job ,第一个是先 build ,这个跟上面的build一样名称自定义
deploy_job:
     stage: deploy  # 这一个stage：的值就是上面的 stages下的第一个 deploy
     tags:
       - deploy # tag 在注册的时候，有提到过，分两步骤，第二个个是 deploy,所以这里也对应上，注册的时候是自定义的名称
     script:
      - pwd #  也输出下路径
      - mv public html
      - ls
      - scp -r ./html/ root@121.43.154.107:/opt/docker/nginx  # 将打包好的文件上到发布项目的服务器中的。放到nginx能访问到的文件夹下
      - echo "gitlab-ci success."